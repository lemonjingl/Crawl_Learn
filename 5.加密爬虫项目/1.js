const CryptoJS=require('crypto-js')

function getSign(e) {
        delete e.sign;
        for (var t = [], n = Object.keys(e).sort(), r = 0; r < n.length; r++) {
            var i = n[r]
              , a = e[i];
            t.push(i),
            t.push(a)
        }
        t.push("iIndex");
        var s = t.join("_")
          , c = CryptoJS.MD5(s).toString();
        return c
    }

data={
    "url": "mobile/movie/objectFansRank",
    "method": "GET"
}
// console.log(getSign(data))

// 5f3cce6a40c09a221b21104cc98436a3
// 5f3cce6a40c09a221b21104cc98436a3


function dataFilter(r,n) {
            let r1=r.replace(/\s+/g,"+")
            var r2=CryptoJS.enc.Utf8.parse(r1)
            var i = CryptoJS.enc.Utf8.parse(n + "000")
            var a = CryptoJS.enc.Utf8.parse(n + "000")
            var s = CryptoJS.AES.decrypt(r2.toString(), i, {
                iv: a
            })
            var c = s.toString(CryptoJS.enc.Utf8).toString();
            return data = JSON.parse(c);
    }


var data=''
console.log(dataFilter(data))