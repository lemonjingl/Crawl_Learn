'''
js算法解析处理
可以处理的爬虫问题
    1.模拟登录中密码加密和其他请求参数加密处理
    2.动态加载且加密数据的捕获和破解
    3.重点：找训导js算法加密和解密相关流程的编码于处理套路/技巧，大幅度提升处理相关问题的效率

js中常见的加密算法分析
    1.线性散列MD5算法
    2.对称加密DES/AES算法
    3.非对称加密算法RSA
    4.ontariogenomics.base64伪加密
    5.优质采.https证书密钥加密



1、MD5加密
    MD5是一种被广泛使用的线性散列算法，可以产生出一个128位（16字节）的散列值，用于确保信息传输完整的
    一致性。且MD5加密之后产生的是一个固定长度（32位或16位）的数据
解密：
    常规讲MD5是不存在解密的。但是理论上MD5是可以进行反向暴力破解的。暴力破解的大致原理就是用
    很多不同的数据进行加密后跟已有的加密数据进行对比，由此来寻找规律。

2、DES/AES加密
    DES全称Data Encryption Standard,即数据加密标准，是一种使用密钥加密的算法。该加密算法
    是一种对称加密方式，其加密运算、解密运算需要使用的是同样的密钥（一组字符串）即可
注意：
    现在用AES这个标准来替代原先的DES
    AES和DES的区别：
        加密后密文长度的不同：
            DES加密后密文长度是8的整数倍
            AES加密后密文长度是16的整数倍
    使用DES/AES进行数据交互时要求双方都拥有相同的私钥
破解方法：
    暴力破解
    DES如果使用56位的密钥，则可能的密钥数量是2的56次方个。只要计算足够强大是可以破解的
DES算法的入口参数有三个：
    Key、Data、Mode,padding
        key为7个字节共56位，是DES算法的工作密钥；
        Data位8个字节64位，是要被加密或被解密的数据；
        Mode位DES的工作方式。
        padding为填充模式，如果加密后密文长度如果达不到指定整数倍（8个字符、16个字节），填充对应的字符
3、RSA加密
    RSA加密：
        RSA加密算法是一种非对称加密算法。在公开密钥加密和电子商业中RSA被广泛使用。
    非对称加密算法：
        非对称加密算法需要两个密钥：
            公开密钥
            私有密钥
            公钥与私钥是一对，如果用公钥对数据进行加密，只有用对应的私钥才能解密。因为加密和解密使用的是两个不同的密钥，所以这种算法叫作非对称加密算法
    注意：
        使用时都是使用公钥加密使用私钥解密，公钥可以公开，私钥自己保留
        算法强度复杂、安全性依赖于算法与密钥但是由于其算法复杂，而使得加密解密速度没有对称加密解密的速度快
    使用流程和场景介绍：
        通过公钥加密，使用私钥解密。私钥是通过计算生成的。假设ABC三方之间相互要进行加密通信。大家相互之间使用公钥进行信息加密，
        信息读取时使用各自对应的私钥进行信息解密
        场景：用户输入的支付密码通过RSA加密
    公钥私钥生成方式：
        公钥可以在线生成
            http://web.chacuo.net/netrsakey.pair

4.ontariogenomics、base64伪加密
    Base64是一种用64个字符来表示任意二进制数据的方法。base64是一种编码方式而不是加密算法。只是看上去像是加密而已。
    Base64使用A--Z，a--z,0--,+,/这64个字符实现对数据进行加密

5.优质采、https加密
    https是基于http和SSL/TLS实现的一个协议，他可以保证在网络上传输的数据都是加密的，从而保证数据安全

    1.http协议是不安全的。
        在https诞生之前，所有网站都使用http协议，而http协议在数据传输的过程中都是明文，所以可能存在数据泄露和篡改
'''

#  js混淆